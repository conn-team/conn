/* Server<->Client messages definitions */

syntax = "proto3";
package server;

option java_package = "com.github.connteam.conn.core.net.proto";
option java_outer_classname = "NetProtos";

message AuthRequest {
    bytes payload = 1;
}

message AuthResponse {
    string username = 1;
    bytes publicKey = 2;
    bytes signature = 3; // username + publicKey + payload
}

message AuthStatus {
    enum Status {
        INTERNAL_ERROR = 0;
        LOGGED_IN = 1;
        REGISTERED = 2;
        MISMATCHED_PUBLICKEY = 3;
        INVALID_SIGNATURE = 4;
        ALREADY_ONLINE = 5;
        INVALID_INPUT = 6;
    }
    Status status = 1;
}

message KeepAlive {
}

message UserInfoRequest {
    int32 requestID = 1;
    string username = 2;
}

message UserInfo {
    int32 requestID = 1;
    bool exists = 2;
    string username = 3;
    bytes publicKey = 4;
}

message SignedKey {
    bytes publicKey = 1;
    bytes signature = 2;
}

message EphemeralKeysDemand {
    int32 count = 1;
}

message EphemeralKeysUpload {
    repeated SignedKey keys = 1;
}

message TransmissionRequest {
    int32 transmissionID = 1;
    string username = 2;
}

message TransmissionResponse {
    int32 transmissionID = 1;
    bool success = 2;
    SignedKey partialKey1 = 3;
}

message PeerSend {
    int32 transmissionID = 1;
    bytes encryptedMessage = 2;
    bytes partialKey2 = 3;
    bytes signature = 4; // encryptedMessage + partialKey1 + partialKey2
}

message PeerSendAck {
    int32 transmissionID = 1;
}

message PeerRecv {
    int32 transmissionID = 1;
    string username = 2;
    bytes encryptedMessage = 3;
    bytes partialKey1 = 4;
    bytes partialKey2 = 5;
    bytes signature = 6; // encryptedMessage + partialKey1 + partialKey2
}

message PeerRecvAck {
    int32 transmissionID = 1;
}
